name: Issue Autobuild Workflow

on:
  issues:
    types:
      - opened

jobs:
  autobuild:
    runs-on: ubuntu-latest
    steps:
      - name: Check if issue has the "docker-autobuild" label
        id: check-label
        run: |
          if jq '.[].name | select(. == "docker-autobuild")' <<< '${{ toJson(github.event.issue.labels) }}'; then
            has_label="true"
          else
            has_label="false"
          fi
          echo "has_label=$has_label" >> $GITHUB_ENV

      - name: Checkout code
        if: env.has_label == 'true'
        uses: actions/checkout@v2

      - name: Retrieve existing version from file
        id: retrieve-version
        if: env.has_label == 'true'
        run: |
          existing_version=$(cat .github/autobuild_version 2>/dev/null || echo "0")
          echo "existing_version=$existing_version" >> $GITHUB_ENV

      - name: Generate version based on Date Versioning (YYYY.MM.DD)
        id: generate-version
        if: env.has_label == 'true'
        run: |
          current_date=$(date +'%Y.%m.%d')
          existing_version="${{ env.existing_version }}"

          version_parts=(${existing_version//./ })
          subversion=${version_parts[3]:-0}  # Get the existing subversion or set to 0 if absent

          if [[ "$subversion" != "0" && "${existing_version%.*}" == "$current_date" ]]; then
            incremented_subversion=$((subversion + 1))
            version="${existing_version%.*}.$incremented_subversion"
          elif [[ "$existing_version" == "$current_date" ]]; then
            incremented_subversion=$((subversion + 1))
            version="$current_date.$incremented_subversion"
          else
            version="$current_date"
          fi

          echo "version=$version" >> $GITHUB_ENV

      - name: Save generated version to file
        id: save-version
        if: env.has_label == 'true'
        run: |
          echo "${{ env.version }}" > .github/autobuild_version
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add .github/autobuild_version
          git commit -m "Update autobuild_version"
          git push origin $GITHUB_REF

      - name: Download dependencies
        if: env.has_label == 'true'
        run: |
          curl -o emailproxy.py https://raw.githubusercontent.com/simonrob/email-oauth2-proxy/main/emailproxy.py

      - name: Build image
        if: env.has_label == 'true'
        run: |
          docker build . -t email-oauth2-proxy-docker
          docker tag email-oauth2-proxy-docker ghcr.io/rogerfar/email-oauth2-proxy-docker:latest
          docker tag email-oauth2-proxy-docker ghcr.io/rogerfar/email-oauth2-proxy-docker:${{ env.version }}

      - name: Push image
        if: env.has_label == 'true'
        run: |
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker push ghcr.io/rogerfar/email-oauth2-proxy-docker:${{ env.version }}
          docker push ghcr.io/rogerfar/email-oauth2-proxy-docker:latest

